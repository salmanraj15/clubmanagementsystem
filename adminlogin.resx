<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhlgA5AIcAABQiJISSlIxaJDxaZEw6LBw+TMTKzGR2fDQuLKSurBwyPDQ+PMR2JHRaNGxOJOTm
        5HSGjDROXJSipKxqJFRqdCQqLFRKNLS+vCwyLHR6fJRmLFReZNTa3BQqNDQ+TCRGVJSanBw6ROSGJPT2
        9GRqbKSmrFxKLCw+RMzS1DQ2LKy2vHxWJERSVMTCxExibExCLGx+hISKjIyanBwyRHRWLJyqrHSChKRm
        JDRGTBwiLJxiJNSCJOzu7LzGxBwqLGRKLEQ6LExaZCQ+TGx2fEQ+LHROLHyOlDxWZJyiqbRyJCw6QlRm
        cDw2LFxGLDxGT4ySl4xiLKyutIRaLHyGjjxOWVxyfCwuL7y+w+Ti5GRye9TS1FRCKxQiNMzO0iQyOtR+
        JFxqcyw2Pnx+hNzi5PSKJPz+/LS2vKRuLBwqPERaZcx+JGxSNOzq7LRuJCQuPExSWXR+jJxmKFxibNza
        3JyepCQ6SPz6/FxOPCxCVDQ6PERWZCQ2RHyChqRqKjRKXPTy9GROMeyOJCxGVMx6JOyKJISOnNyCJERC
        PLxyJDxSZLzCzFRGNFxufHxaLlxmbJRiKGxyfBQmLISWnIxeKUw+KBxCVMTO0mR6hDQyLKSytDRCRGxS
        LOTq7DRSZJSmrKxuKSQuMiw2NHR+hFRiaxQuN5SepPT6/GRudKSqrlxONCxCTMzW2DQ6NERWXMTGyExm
        bGyCjISOlIyepBw2RDRKVBwmMezy9BwuNExeaCRCVGx6g0RCNHRSK5ymrDw6MDxKVIyWnKyyt4ReLnyK
        kjxSXLzCxNTW2FRGLCQ2PFxudLS6vURebExWXJxqLNze4CxKXBw2PMR6JDRCTKy6vBQmNPSOJBwuPNyG
        JLx2JBQiLISSnBw+VGR2hKSutDQ+RGxOLOTm7HSGlJSirLS+xCwyNHR6hJSapBw6TPT2/GRqdFxKNCw+
        TDQ2NHxWLERSXExidExCNGx+jIyapHRWNJyqtHSCjKRmLDRGVJxiLOzu9LzGzBwqNGRKNCQ+VGx2hEQ+
        NCH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAlgA5AAAI/wCzZdsncF+tbNQIDjxYi2GHHAuz
        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
        Rya5ZJNPRjnlgAAAOw==
</value>
  </data>
</root>